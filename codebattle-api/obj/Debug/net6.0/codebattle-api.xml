<?xml version="1.0"?>
<doc>
    <assembly>
        <name>codebattle-api</name>
    </assembly>
    <members>
        <member name="T:codebattle_api.Controllers.MainController`4">
            <summary>
            Main Controller for all the entities
            </summary>
            <typeparam name="IService"></typeparam>
            <typeparam name="PostDTO"></typeparam>
            <typeparam name="DetailDTO"></typeparam>
            <typeparam name="Entity"></typeparam>
        </member>
        <member name="M:codebattle_api.Controllers.MainController`4.Get(System.Int32)">
            <summary>
            (Autogenerated) Returns a desired entity based on its Database Id
            </summary>
            <param name="id">Database Id of the desired Entity</param>
            <returns>Detail DTO of the desired Entity</returns>
        </member>
        <member name="M:codebattle_api.Controllers.MainController`4.Update(System.Int32,`1)">
            <summary>
            (Autogenerated) Edits a desired Entity based on its Database Id
            </summary>
            <param name="id">Database Id of the desired Entity</param>
            <param name="postDto">New Content of the Entity</param>
            <returns>DTO of the edited entity</returns>
        </member>
        <member name="M:codebattle_api.Controllers.MainController`4.Create(`1)">
            <summary>
            (Autogenerated) Creates a new Entity
            </summary>
            <param name="postDTO">New Entity content</param>
            <returns>DTO of the new Entity</returns>
        </member>
        <member name="M:codebattle_api.Controllers.MainController`4.Delete(System.Int32,System.Boolean)">
            <summary>
            (Autogenerated) Deletes a desired Entity by its Database Id
            </summary>
            <param name="id">Database Id of the desired Entity</param>
            <param name="isDbDelete">Defines if the delete is going to be logical or physical</param>
            <returns></returns>
        </member>
        <member name="M:codebattle_api.Controllers.MainController`4.ReturnError(codebattle_api.Exceptions.CodeBattleException)">
            <summary>
            Method that maps errors automatically
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:codebattle_api.Exceptions.CodeBattleException.GetErrorMessage(codebattle_api.Exceptions.ErrorCode)">
            <summary>
            Method used to define the error message returned by the exception
            </summary>
            <param name="errorCode"></param>
            <returns></returns>
        </member>
        <member name="M:codebattle_api.Exceptions.CodeBattleException.GetErrorTranslationMessage(codebattle_api.Exceptions.ErrorCode)">
            <summary>
            Method that returns a translatable ready error message Format
            </summary>
            <param name="errorCode"></param>
            <returns></returns>
        </member>
        <member name="T:codebattle_api.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:codebattle_api.Migrations.PruebaMigracion">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.PruebaMigracion.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.PruebaMigracion.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.PruebaMigracion.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:codebattle_api.Migrations.PruebaFriendsEnlazado">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.PruebaFriendsEnlazado.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.PruebaFriendsEnlazado.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.PruebaFriendsEnlazado.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:codebattle_api.Migrations.InserccionDelCampoCreacion">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.InserccionDelCampoCreacion.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.InserccionDelCampoCreacion.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.InserccionDelCampoCreacion.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:codebattle_api.Migrations.PasswordResetToken">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.PasswordResetToken.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.PasswordResetToken.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.PasswordResetToken.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:codebattle_api.Migrations.addBadgeEntity">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.addBadgeEntity.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.addBadgeEntity.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Migrations.addBadgeEntity.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="M:codebattle_api.Repositories.IRepository`2.List``1(System.Linq.Expressions.Expression{System.Func{`1,System.Object}},System.Boolean)">
            <summary>
            Gets a list of Mapped Objects
            </summary>
            <typeparam name="returnDTO">Type of Mapped Object returned</typeparam>
            <param name="include">Expression that defines which relations to include</param>
            <param name="isActive">Bool that defines Wether to get the not deleted or deleted Entities</param>
            <returns>IEnumerable of Mapped Objects</returns>
        </member>
        <member name="M:codebattle_api.Repositories.IRepository`2.GetById``1(System.Int32,System.Linq.Expressions.Expression{System.Func{`1,System.Object}},System.Boolean)">
            <summary>
            Gets a mapped object based on a id
            </summary>
            <typeparam name="returnDTO">Type of Mapped Object returned</typeparam>
            <param name="id">id of the desired entity</param>
            <param name="include">Expression that defines which relations to include</param>
            <param name="isActive">Bool that defines Wether to get the not deleted or deleted Entities</param>
            <returns>Mapped Object</returns>
        </member>
        <member name="M:codebattle_api.Repositories.IRepository`2.GetBySpec``1(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Object}})">
            <summary>
            Gets a mapped object based on a lambda expression
            </summary>
            <typeparam name="returnDTO">Type of Mapped Object returned</typeparam>
            <param name="specification">Expression that defines the specficiations to match</param>
            <param name="include">Expression that defines which relations to include</param>
            <returns>Mapped Object</returns>
        </member>
        <member name="M:codebattle_api.Repositories.IRepository`2.ListBySpec``1(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Object}},System.Linq.Expressions.Expression{System.Func{`1,`1}})">
            <summary>
            Gets a list of mapped objects based on a lambda expression
            </summary>
            <typeparam name="returnDTO">Type of Mapped Object returned</typeparam>
            <param name="specification">Expression that defines the specficiations to match</param>
            <param name="selectExpression">Expression that defines which fields to exclude from getting</param>
            <param name="include">Expression that defines which relations to include</param>
            <returns>IEnumerable of Mapped Object</returns>
        </member>
        <member name="M:codebattle_api.Repositories.IRepository`2.Add(`0)">
            <summary>
            Creates a new entity in de DB
            </summary>
            <param name="newDto">New entity DTO</param>
            <returns>Created Mapped Object</returns>
        </member>
        <member name="M:codebattle_api.Repositories.IRepository`2.Delete(System.Int32)">
            <summary>
            Deletes by logic a DB Entity
            </summary>
            <param name="id">id of the desired entity</param>
            <returns>Confirmation of deletion</returns>
        </member>
        <member name="M:codebattle_api.Repositories.IRepository`2.DbDelete(System.Int32)">
            <summary>
            Deletes Completely a DB Entity
            </summary>
            <param name="id">id of the desired entity</param>
            <returns>Confirmation of deletion</returns>
        </member>
        <member name="M:codebattle_api.Repositories.IRepository`2.Edit(`0)">
            <summary>
            Edits a DB Entity
            </summary>
            <param name="newDto">desired entity with changes</param>
            <returns>Edited Mapped Entity</returns>
        </member>
        <member name="M:codebattle_api.Repositories.IRepository`2.Save">
            <summary>
            Forces the save of the current context state 
            </summary>
            <returns>Confirmation of saving</returns>
        </member>
        <member name="M:codebattle_api.Services.AuthServices.AuthService.GenerateToken(codebattle_api.DTO.UserDTO)">
            <summary>
            This Method Generates a User Token
            </summary>
            <param name="user"></param>
            <returns>JWT Token</returns>
        </member>
        <member name="M:codebattle_api.Services.AuthServices.AuthService.RegisterUser(codebattle_api.DTO.UserDTO)">
            <summary>
            This Method Registers a user into de app
            </summary>
            <param name="user"></param>
            <returns>JWT Token</returns>
        </member>
        <member name="M:codebattle_api.Services.AuthServices.AuthService.Login(codebattle_api.DTO.UserDTO)">
            <summary>
            This Method Registers a user into de app
            </summary>
            <param name="user"></param>
            <returns>JWT Token</returns>
        </member>
        <member name="M:codebattle_api.Services.UserServices.IUserService.FilterUsers(System.String,System.String,System.String)">
            <summary>
            Method that returns a list of users with a username similar
            </summary>
            <param name="username"></param>
            <param name="email"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="T:codebattle_api.utils.PasswordHasher">
            <summary>
            Class to encrypt and Compare Argon2 Passwords
            </summary>
        </member>
        <member name="T:codebattle_api.utils.SecretManager">
            <summary>
            Class to get Secrets
            </summary>
        </member>
    </members>
</doc>
